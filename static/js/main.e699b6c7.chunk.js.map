{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["compare","a","b","selectStyle","width","logoStyle","namePadding","HydroponicsTable","props","state","error","isLoaded","items","hourDifference","sensorId","handleChange","bind","handleChangeSensor","fetch","then","res","json","result","setState","event","target","value","this","message","id_items_ph","id_items_tds","id_items_waterTemp","id_items_airTemp","id_items_humidity","console","log","length","sorted_objects","i","id","time","Date","setTime","parse","RequestTime","now","Math","abs","push","pH","TDS","Humidity","sort","unshift","newest_item","class","className","toFixed","style","name","selected","onChange","height","chartType","loader","data","options","series","0","color","title","hAxis","vAxis","rootProps","map","item","requestDateTime","React","Component","App","href","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAAe,I,2BCUf,SAASA,EAASC,EAAGC,GACnB,OAAGD,EAAE,GAAKC,EAAE,IACF,EAEFD,EAAE,GAAKC,EAAE,GACR,EAEF,EAGT,IAAMC,EAAc,CAClBC,MAAO,KAOHC,EAAY,CAChB,eAAgB,IAGZC,EAAc,CAClB,gBAAiB,IAGbC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,MAAO,GACPC,eAAgB,GAChBC,SAAU,GAGZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBAXT,E,qDAcnB,WAAqB,IAAD,OAClBE,MAAM,4EACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKC,SAAS,CACZZ,UAAU,EACVC,MAAOU,EAAOV,MACdC,eAAgB,QAMpB,SAACH,GACC,EAAKa,SAAS,CACZZ,UAAU,EACVD,e,0BAMV,SAAac,GACc,OAAtBA,EAAMC,OAAOC,MACdC,KAAKJ,SAAS,CAACV,eAAgB,KACF,QAAtBW,EAAMC,OAAOC,MACpBC,KAAKJ,SAAS,CAACV,eAAgB,IACF,QAAtBW,EAAMC,OAAOC,OACpBC,KAAKJ,SAAS,CAACV,eAAgB,Q,gCAInC,SAAmBW,GACfG,KAAKJ,SAAS,CAACT,SAAUU,EAAMC,OAAOC,U,oBAG1C,WAAU,IAAD,EAC4BC,KAAKlB,MAAhCC,EADD,EACCA,MAAOC,EADR,EACQA,SAAUC,EADlB,EACkBA,MACzB,GAAIF,EACF,OAAO,0CAAaA,EAAMkB,WACrB,GAAKjB,EAEL,CAGL,IACIkB,EAAc,GACdC,EAAe,GACfC,EAAqB,GACrBC,EAAmB,GACnBC,EAAoB,GACxBC,QAAQC,IAAIvB,EAAM,IAClBsB,QAAQC,IAAIvB,EAAMwB,QAGlB,IAFA,IAAIC,EAAiB,GAEbC,EAAI,EAAGA,EAAI1B,EAAMwB,OAAQE,IAC/B,GAAG1B,EAAM0B,GAAGC,IAAMZ,KAAKlB,MAAMK,SAAS,CAGpC,IAAI0B,EAAO,IAAIC,KACfD,EAAKE,QAAQD,KAAKE,MAAM/B,EAAM0B,GAAGM,cAEjC,IAAIC,EAAM,IAAIJ,KACCK,KAAKC,IAAIF,EAAML,GAAQ,KACxBb,KAAKlB,MAAMI,iBACvBgB,EAAYmB,KAAK,CAACR,EAAM5B,EAAM0B,GAAGW,KACjCnB,EAAakB,KAAK,CAACR,EAAM5B,EAAM0B,GAAGY,MAE/BtC,EAAM0B,GAAG,cAAgB,GAC1BP,EAAmBiB,KAAK,CAACR,EAAM5B,EAAM0B,GAAG,gBAGvC1B,EAAM0B,GAAG,YAAc,GACxBN,EAAiBgB,KAAK,CAACR,EAAM5B,EAAM0B,GAAG,cAGrC1B,EAAM0B,GAAN,SAAuB,GACxBL,EAAkBe,KAAK,CAACR,EAAM5B,EAAM0B,GAAGa,WAGzCd,EAAeW,KAAK,CAACR,EAAM5B,EAAM0B,MAKvCT,EAAYuB,KAAKpD,GACjB8B,EAAasB,KAAKpD,GAClB+B,EAAmBqB,KAAKpD,GACxBgC,EAAiBoB,KAAKpD,GACtBiC,EAAkBmB,KAAKpD,GAGvBqC,EAAee,KAAKpD,GAEpB6B,EAAYwB,QAAQ,CAAC,OAAQ,OAC7BvB,EAAauB,QAAQ,CAAC,OAAQ,OAC9BtB,EAAmBsB,QAAQ,CAAC,OAAQ,eACpCrB,EAAiBqB,QAAQ,CAAC,OAAQ,aAClCpB,EAAkBoB,QAAQ,CAAC,OAAQ,aAEnC,IAAIC,EAAcjB,EAAeA,EAAeD,OAAS,GAEzD,OACE,gCACA,8BAEE,qBAAKmB,MAAM,iBAAX,SACA,sBAAKA,MAAM,gDAAX,UACE,qBAAKA,MAAM,MAAX,SACE,sBAAKA,MAAM,gCAAX,UACE,qBAAKA,MAAM,mBAAX,SACE,oBAAIA,MAAM,iBAAV,8BAEF,qBAAKA,MAAM,YAAX,SACA,wBAAOC,UAAU,eAAjB,UACA,gCACA,+BACE,oCACA,yDACA,4CACA,0CACA,+CAGF,gCACCF,GACD,+BAEI,6BAAKA,EAAY,GAAZ,GAAqBG,QAAQ,KAClC,6BAAKH,EAAY,GAAZ,IAAsBG,QAAQ,KACnC,6BAAKH,EAAY,GAAG,cAAcG,QAAQ,KAC1C,6BAAKH,EAAY,GAAG,YAAYG,QAAQ,KACxC,6BAAKH,EAAY,GAAZ,SAA2BG,QAAQ,oBAQhD,qBAAKF,MAAM,MAAX,SACE,sBAAKA,MAAM,gCAAX,UACE,qBAAKA,MAAM,mBAAX,SACE,oBAAIA,MAAM,iBAAV,0BAEF,qBAAKA,MAAM,YAAX,SACE,yBAAQA,MAAM,qBAAqBG,MAAOvD,EAAawD,KAAK,YAAYpB,GAAG,YAAYb,MAAOC,KAAKlB,MAAMmD,SAAUC,SAAUlC,KAAKZ,aAAlI,UACE,wBAAQW,MAAM,MAAd,iBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4BAKR,qBAAK6B,MAAM,MAAX,SACE,sBAAKA,MAAM,gCAAX,UACE,qBAAKA,MAAM,mBAAX,SACE,oBAAIA,MAAM,iBAAV,gCAEA,qBAAKA,MAAM,YAAX,SACA,yBAAQA,MAAM,qBAAsBG,MAAOvD,EAAawD,KAAK,MAAMpB,GAAG,MAAMb,MAAOC,KAAKlB,MAAMK,SAAU+C,SAAUlC,KAAKV,mBAAvH,UACE,wBAAQS,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,gCASV,sBAAK6B,MAAM,iBAAX,UACA,wCAEA,uBAAOC,UAAU,SAAjB,SACA,kCACE,+BACE,6BACA,cAAC,IAAD,CACEpD,MAAO,QACP0D,OAAQ,QACRC,UAAU,YACVC,OAAQ,gDACRC,KAAMpC,EACNqC,QAAS,CACPC,OAAO,CACLC,EAAG,CAACC,MAAO,YAEbC,MAAO,KACPC,MAAO,CACLD,MAAO,QAETE,MAAO,CACLF,MAAO,OAGXG,UAAW,CAAE,cAAe,SAI9B,6BACA,cAAC,IAAD,CACErE,MAAO,QACP0D,OAAQ,QACRC,UAAU,YACVC,OAAQ,gDACRC,KAAMnC,EACNoC,QAAS,CACPC,OAAO,CACLC,EAAG,CAACC,MAAO,YAEbC,MAAO,0BACPC,MAAO,CACLD,MAAO,QAETE,MAAO,CACLF,MAAO,OAGXG,UAAW,CAAE,cAAe,YAIhC,+BACE,6BACA,cAAC,IAAD,CACErE,MAAO,QACP0D,OAAQ,QACRC,UAAU,YACVC,OAAQ,gDACRC,KAAMlC,EACNmC,QAAS,CACPC,OAAO,CACLC,EAAG,CAACC,MAAO,YAEbC,MAAO,oBACPC,MAAO,CACLD,MAAO,QAETE,MAAO,CACLF,MAAO,mBAGXG,UAAW,CAAE,cAAe,SAI9B,6BACA,cAAC,IAAD,CACErE,MAAO,QACP0D,OAAQ,QACRC,UAAU,YACVC,OAAQ,gDACRC,KAAMjC,EACNkC,QAAS,CACPC,OAAO,CACLC,EAAG,CAACC,MAAO,YAEbC,MAAO,kBACPC,MAAO,CACLD,MAAO,QAETE,MAAO,CACLF,MAAO,iBAGXG,UAAW,CAAE,cAAe,YAIhC,6BACE,6BACA,cAAC,IAAD,CACErE,MAAO,QACP0D,OAAQ,QACRC,UAAU,YACVC,OAAQ,gDACRC,KAAMhC,EACNiC,QAAS,CACPC,OAAO,CACLC,EAAG,CAACC,MAAO,YAEbC,MAAO,WACPC,MAAO,CACLD,MAAO,QAETE,MAAO,CACLF,MAAO,aAGXG,UAAW,CAAE,cAAe,mBAQlC,sBAAKlB,MAAM,iBAAX,UACA,4CAEA,qBAAKA,MAAM,iBAAX,SACA,wBAAOC,UAAU,eAAjB,UACA,gCACA,+BACE,sCACA,oCACA,oCACA,gDACA,8CACA,+CAGF,gCACGnB,EAAeqC,KAAI,SAAAC,GAAI,OACtB,+BACA,6BACEA,EAAK,GAAGC,iBADF,QAGR,6BACGD,EAAK,GAAG1B,GAAGQ,QAAQ,IADd,MAGR,6BACGkB,EAAK,GAAGzB,IAAIO,QAAQ,IADf,OAGR,6BACGkB,EAAK,GAAG,cAAclB,QAAQ,IADzB,cAGR,6BACGkB,EAAK,GAAG,YAAYlB,QAAQ,IADvB,YAGR,6BACGkB,EAAK,GAAGxB,SAASM,QAAQ,IADpB,+BAlShB,OAAO,iD,GAzDkBoB,IAAMC,WA8XtBC,MApBf,WACE,OACE,sBAAKvB,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,sBAAKD,MAAM,4EAAX,UACE,mBAAGyB,KAAK,IAAIzB,MAAM,2DAAlB,SACE,qBAAK0B,IAAI,iBAAiBC,IAAI,OAAOxB,MAAOrD,EAAWD,MAAM,UAG/D,qBAAKmD,MAAM,wCAAX,SACE,sBAAMA,MAAM,OAAOG,MAAOpD,EAA1B,kDAIN,cAAC,EAAD,IACA,4BAAG,oJCjZM6E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlE,MAAK,YAAkD,IAA/CmE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e699b6c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\n\nimport Chart from \"react-google-charts\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//current values request\n//https://oylpp760bf.execute-api.us-east-2.amazonaws.com/prod/hydro_curr_vals\nfunction compare( a, b ) {\n  if(a[0] < b[0]){\n    return -1;\n  }\n  else if(a[0] > b[0]){\n    return 1;\n  }\n  return 0;\n}\n\nconst selectStyle = {\n  width: 130\n};\n\nconst floatLeftStyle = {\n  float: \"left\"\n}\n\nconst logoStyle = {\n  \"padding-left\": 20\n}\n\nconst namePadding = {\n  \"padding-right\": 20\n}\n\nclass HydroponicsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      hourDifference: 24,\n      sensorId: 1\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeSensor = this.handleChangeSensor.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://oylpp760bf.execute-api.us-east-2.amazonaws.com/prod/473hydrodata\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.items,\n            hourDifference: 24\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  handleChange(event){\n    if(event.target.value == \"day\"){\n      this.setState({hourDifference: 24});\n    }else if(event.target.value == \"hour\"){\n      this.setState({hourDifference: 2});\n    }else if(event.target.value == \"week\"){\n      this.setState({hourDifference: 168});\n    }\n  };\n\n  handleChangeSensor(event){\n      this.setState({sensorId: event.target.value});\n  };\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n\n      //calculate graphs\n      var id = 1;\n      var id_items_ph = [];\n      var id_items_tds = [];\n      var id_items_waterTemp = [];\n      var id_items_airTemp = [];\n      var id_items_humidity = [];\n      console.log(items[0]);\n      console.log(items.length);\n      var sorted_objects = [];\n\n      for(var i = 0; i < items.length; i++){\n        if(items[i].id == this.state.sensorId){\n          //console.log(items[i].RequestTime);\n          //time.setTime(Date.parse(items[i].RequestTime));\n          var time = new Date();\n          time.setTime(Date.parse(items[i].RequestTime));\n\n          var now = new Date();\n          var hoursDif = Math.abs(now - time) / 36e5;\n          if(hoursDif < this.state.hourDifference){\n            id_items_ph.push([time, items[i].pH]);\n            id_items_tds.push([time, items[i].TDS]);\n\n            if(items[i][\"Water Temp\"] > 0){\n              id_items_waterTemp.push([time, items[i][\"Water Temp\"]]);\n            }\n\n            if(items[i][\"Air Temp\"] > 0){\n              id_items_airTemp.push([time, items[i][\"Air Temp\"]]);\n            }\n\n            if(items[i][\"Humidity\"] > 0){\n              id_items_humidity.push([time, items[i].Humidity]);\n            }\n\n            sorted_objects.push([time, items[i]]);\n          }\n        }\n      }\n      //sort\n      id_items_ph.sort(compare);\n      id_items_tds.sort(compare);\n      id_items_waterTemp.sort(compare);\n      id_items_airTemp.sort(compare);\n      id_items_humidity.sort(compare);\n\n\n      sorted_objects.sort(compare);\n\n      id_items_ph.unshift(['time', 'pH']);\n      id_items_tds.unshift(['time', 'EC']);\n      id_items_waterTemp.unshift(['time', 'Water Temp']);\n      id_items_airTemp.unshift(['time', 'Air Temp']);\n      id_items_humidity.unshift(['time', 'Humidity']);\n\n      var newest_item = sorted_objects[sorted_objects.length - 1];\n\n      return (\n        <div>\n        <div>\n\n          <div class=\"container py-3\">\n          <div class=\"row row-cols-1 row-cols-md-3 mb-3 text-center\">\n            <div class=\"col\">\n              <div class=\"card mb-4 rounded-3 shadow-sm\">\n                <div class=\"card-header py-3\">\n                  <h4 class=\"my-0 fw-normal\">Current Values</h4>\n                </div>\n                <div class=\"card-body\">\n                <table className=\"center table\">\n                <thead>\n                <tr>\n                  <th>pH</th>\n                  <th>Electrical Conductivity</th>\n                  <th>Water Temp</th>\n                  <th>Air Temp</th>\n                  <th>Humidity</th>\n                </tr>\n                </thead>\n                <tbody>\n                {newest_item &&\n                <tr>\n\n                    <td>{newest_item[1][\"pH\"].toFixed(2)}</td>\n                    <td>{newest_item[1][\"TDS\"].toFixed(2)}</td>\n                    <td>{newest_item[1][\"Water Temp\"].toFixed(2)}</td>\n                    <td>{newest_item[1][\"Air Temp\"].toFixed(2)}</td>\n                    <td>{newest_item[1][\"Humidity\"].toFixed(2)}</td>\n                </tr>\n                }\n                </tbody>\n                </table>\n                </div>\n              </div>\n            </div>\n            <div class=\"col\">\n              <div class=\"card mb-4 rounded-3 shadow-sm\">\n                <div class=\"card-header py-3\">\n                  <h4 class=\"my-0 fw-normal\">Time Range</h4>\n                </div>\n                <div class=\"card-body\">\n                  <select class=\"form-select center\" style={selectStyle} name=\"timeRange\" id=\"timeRange\" value={this.state.selected} onChange={this.handleChange}>\n                    <option value=\"day\">day</option>\n                    <option value=\"hour\">hour</option>\n                    <option value=\"week\">week</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div class=\"col\">\n              <div class=\"card mb-4 rounded-3 shadow-sm\">\n                <div class=\"card-header py-3\">\n                  <h4 class=\"my-0 fw-normal\">Sensor Module ID</h4>\n                </div>\n                  <div class=\"card-body\">\n                  <select class=\"form-select center\"  style={selectStyle} name=\"ids\" id=\"ids\" value={this.state.sensorId} onChange={this.handleChangeSensor}>\n                    <option value={1}>1</option>\n                    <option value={2}>2</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n          </div>\n          </div>\n\n          <div class=\"container py-3\">\n          <h3>Graphs</h3>\n\n          <table className=\"center\">\n          <tbody>\n            <tr>\n              <td>\n              <Chart\n                width={'600px'}\n                height={'400px'}\n                chartType=\"LineChart\"\n                loader={<div>Loading Chart</div>}\n                data={id_items_ph}\n                options={{\n                  series:{\n                    0: {color: '#e2431e'}\n                  },\n                  title: 'pH',\n                  hAxis: {\n                    title: 'Time',\n                  },\n                  vAxis: {\n                    title: 'pH',\n                  },\n                }}\n                rootProps={{ 'data-testid': '1' }}\n              />\n              </td>\n\n              <td>\n              <Chart\n                width={'600px'}\n                height={'400px'}\n                chartType=\"LineChart\"\n                loader={<div>Loading Chart</div>}\n                data={id_items_tds}\n                options={{\n                  series:{\n                    0: {color: '#e7711b'}\n                  },\n                  title: 'Electrical Conductivity',\n                  hAxis: {\n                    title: 'Time',\n                  },\n                  vAxis: {\n                    title: 'EC',\n                  },\n                }}\n                rootProps={{ 'data-testid': '1' }}\n              />\n              </td>\n            </tr>\n            <tr>\n              <td>\n              <Chart\n                width={'600px'}\n                height={'400px'}\n                chartType=\"LineChart\"\n                loader={<div>Loading Chart</div>}\n                data={id_items_waterTemp}\n                options={{\n                  series:{\n                    0: {color: '#f1ca3a'}\n                  },\n                  title: 'Water Temperature',\n                  hAxis: {\n                    title: 'Time',\n                  },\n                  vAxis: {\n                    title: 'Water Temp (C)',\n                  },\n                }}\n                rootProps={{ 'data-testid': '1' }}\n              />\n              </td>\n\n              <td>\n              <Chart\n                width={'600px'}\n                height={'400px'}\n                chartType=\"LineChart\"\n                loader={<div>Loading Chart</div>}\n                data={id_items_airTemp}\n                options={{\n                  series:{\n                    0: {color: '#6f9654'}\n                  },\n                  title: 'Air Temperature',\n                  hAxis: {\n                    title: 'Time',\n                  },\n                  vAxis: {\n                    title: 'Air Temp (C)',\n                  },\n                }}\n                rootProps={{ 'data-testid': '1' }}\n              />\n              </td>\n            </tr>\n            <tr>\n              <td>\n              <Chart\n                width={'600px'}\n                height={'400px'}\n                chartType=\"LineChart\"\n                loader={<div>Loading Chart</div>}\n                data={id_items_humidity}\n                options={{\n                  series:{\n                    0: {color: '#1c91c0'}\n                  },\n                  title: 'Humidity',\n                  hAxis: {\n                    title: 'Time',\n                  },\n                  vAxis: {\n                    title: 'Humidity',\n                  },\n                }}\n                rootProps={{ 'data-testid': '1' }}\n              />\n              </td>\n            </tr>\n          </tbody>\n          </table>\n          </div>\n\n          <div class=\"container py-3\">\n          <h3>All Values</h3>\n\n          <div class=\"container py-3\">\n          <table className=\"center table\">\n          <thead>\n          <tr>\n            <th>Time</th>\n            <th>pH</th>\n            <th>EC</th>\n            <th>Water Temp (C)</th>\n            <th>Air Temp (C)</th>\n            <th>Humidity</th>\n          </tr>\n          </thead>\n          <tbody>\n            {sorted_objects.map(item => (\n              <tr>\n              <td key=\"time\">\n               {item[1].requestDateTime}\n              </td>\n              <td key=\"ph\">\n                {item[1].pH.toFixed(2)}\n              </td>\n              <td key=\"tds\">\n                {item[1].TDS.toFixed(2)}\n              </td>\n              <td key=\"Water Temp\">\n                {item[1][\"Water Temp\"].toFixed(2)}\n              </td>\n              <td key=\"Air Temp\">\n                {item[1][\"Air Temp\"].toFixed(2)}\n              </td>\n              <td key=\"humidity\">\n                {item[1].Humidity.toFixed(2)}\n              </td>\n              </tr>\n            ))}\n          </tbody>\n          </table>\n          </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div class=\"d-flex flex-column flex-md-row align-items-center pb-3 mb-4 border-bottom\">\n          <a href=\"/\" class=\"d-flex align-items-center text-dark text-decoration-none\">\n            <img src=\"hydroIgrow.png\" alt=\"logo\" style={logoStyle} width=\"200\"/>\n          </a>\n\n          <nav class=\"d-inline-flex mt-2 mt-md-0 ms-md-auto\">\n            <span class=\"fs-4\" style={namePadding}>EECS 473 Team 16: Hydroponics</span>\n          </nav>\n        </div>\n      </header>\n      <HydroponicsTable/>\n      <i><h4>For EECS 473. Created by Peter Hammel, Cole Hudson, Tanvi Jivtode, Ashvin Kumar, Brian Oo, and XiaoXue Zhong</h4></i>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}